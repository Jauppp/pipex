# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    tests                                              :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: cdomet-d <cdomet-d@student.42lyon.fr>      +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2024/03/12 11:29:09 by cdomet-d          #+#    #+#              #
#    Updated: 2024/03/13 13:57:05 by cdomet-d         ###   ########lyon.fr    #
#                                                                              #
# **************************************************************************** #

#!/usr/bin/bash

valgrind="valgrind --log-file=log --leak-check=full --show-leak-kinds=all --track-origins=yes --track-fds=yes --trace-children=yes"
exe="./pipex"

echo "		TESTING MANDATORY PART"
make

echo "	== [TEST 1] =="
args="Makefile cat cat out"
echo "testing : $args"
$valgrind $exe $args
< Makefile cat | cat > outsh
# greping log to find leaks
grep "total heap usage" log
grep -A 500 "Open file descriptor [0-1024]:$" log | awk '1; /== $/{exit}'
# comparing output with bash
echo
if [ -z "$(diff out outsh)" ]; then
    echo "Diff OK"
else
    echo "Diff KO"
	echo "You :"
	cat -e out
	echo "Bash :"
	cat -e outsh
fi
echo

echo "	== [TEST 2] =="
args=(
    "Makefile"
    "ls"
    "grep .c"
    "out"
)
echo "testing : ${args[@]}"
$valgrind $exe "${args[@]}"
< Makefile ls | grep .c > outsh

# greping log to find leaks
grep "total heap usage" log
grep -A 500 "Open file descriptor [0-1024]:$" log | awk '1; /== $/{exit}'
echo
if [ -z "$(diff out outsh)" ]; then
    echo "Diff OK"
else
    echo "Diff KO"
	echo "You :"
	cat -e out
	echo "Bash :"
	cat -e outsh
fi
echo

echo "	== [TEST 3] =="

args=(
	"Makefile"
	"sleep 2" 
	"sleep 3" 
	"out"
)
echo "testing : ${args[@]} (this one is a bit long)"
(time ($exe "${args[@]}")) 2> time
(time (< Makefile sleep 2 | sleep 3 > outsh)) 2> timebash
grep -oP "real\t\K[0-9]+m[0-9]" time > rtime
grep -oP "real\t\K[0-9]+m[0-9]" time > rtimebash
# greping log to find leaks
grep "total heap usage" log
grep -A 500 "Open file descriptor [0-1024]:$" log | awk '1; /== $/{exit}'
echo
if [ -z "$(diff rtime rtimebash)" ]; then
    echo "Diff OK"
else
    echo "Diff KO"
	echo "You :"
	cat -e out
	echo "Bash :"
	cat -e outsh
fi
rm time timebash rtime rtimebash
echo

echo "	== [TEST 4] =="
args=(
	"Makefile"
	"ghehe" 
	"wc -l" 
	"out"
)
echo "testing : ${args[@]}"
$valgrind $exe "${args[@]}"
< Makefile ghehe | wc -l > outsh
# greping log to find leaks
grep "total heap usage" log
grep -A 500 "Open file descriptor [0-1024]:$" log | awk '1; /== $/{exit}'
echo
if [ -z "$(diff out outsh)" ]; then
    echo "Diff OK"
else
    echo "Diff KO"
	echo diff out outsh
fi
echo

echo "	== [TEST 5] =="
args=(
	"Makefile"
	"ls" 
	"wc -l" 
	"out"
)
echo "testing : ${args[@]}"
$valgrind $exe "${args[@]}"
< Makefile ls | wc -l > outsh
# greping log to find leaks
grep "total heap usage" log
grep -A 500 "Open file descriptor [0-1024]:$" log | awk '1; /== $/{exit}'
echo
if [ -z "$(diff out outsh)" ]; then
    echo "Diff OK"
else
    echo "Diff KO"
	echo "You :"
	cat -e out
	echo "Bash :"
	cat -e outsh
fi
echo


echo "	== [TEST 6] =="

args=(
	"Makefile"
	"echo 'Some lil testing'"
	"grep -i TESTING"
	"out"
)
echo
echo "testing : ${args[@]}"
$valgrind $exe "${args[@]}"
< Makefile echo 'Some lil testing' | grep -i TESTING > outsh
# greping log to find leaks
grep "total heap usage" log
grep -A 500 "Open file descriptor [0-1024]:$" log | awk '1; /== $/{exit}'
echo
if [ -z "$(diff out outsh)" ]; then
    echo "Diff OK"
else
    echo "Diff KO"
	diff out outsh
fi

echo "	== [TEST 7] =="
args=(
	"/dev/random"
	"cat"
	"head"
	"out"
)
echo
echo "testing : ${args[@]}"
$valgrind $exe "${args[@]}"
# greping log to find leaks
grep "total heap usage" log
grep -A 500 "Open file descriptor [0-1024]:$" log | awk '1; /== $/{exit}'
echo
echo "If your pipex didn't stop, it means you have some fds open!"
echo
cat out

rm out outsh log
make fclean